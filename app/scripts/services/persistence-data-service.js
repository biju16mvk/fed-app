app.factory('PersistenceDataService', function(breeze) {
    // create a new manager talking to sample service 
    var host = "http://sampleservice.breezejs.com";
    var serviceName = 'api/data.js'; // your service root here

    // Creates a metadataStore with 3 Northwind EntityTypes:
    // Product, Category, Supplier and a Location ComplexType
    function createMetadataStore(serviceName) {

        var store = new breeze.MetadataStore();
        var defaultNamespace = 'Northwind.Models';
        var defaultKeyGen = breeze.AutoGeneratedKeyType.Identity;
        var helper = new breeze.config.MetaDataHelper(defaultNamespace, defaultKeyGen);

        helper.addDataService(store, serviceName);

        // Add types in alphabetical order ... because we can
        addCategoryType(store);

        return store;
    }

    this.getSyntheticData = function() {
        var store = createMetadataStore(serviceName);

        // initialize it from the application's metadata variable
        //store.importMetadata(windows.app.metadata);

        breeze.EntityQuery.from("Category")
            .using(manager).execute().then(function(data) {
                alert("Got " + data.results.length + " 'Category' entities");
            });

        store.addDataService(
            new breeze.DataService({
                serviceName: 'breeze/Northwind',
                hasServerMetadata: false // don't ask the server for metadata
            })
        );

        // create a new EntityManager that uses this metadataStore
        return new breeze.EntityManager({
            //serviceName: serviceName,
            dataService: dataService,
            metadataStore: metadataStore
        });
    }

    return this;
});